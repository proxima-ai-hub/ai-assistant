{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.address = environment.API_BASE_URL;\n  }\n  // private _refreshrequired = new Subject<void>();\n  // get Refreshrequired() {\n  //   return this._refreshrequired;\n  // }\n  handle_post_requests(userObject, endpoint) {\n    return this.http.post(`${this.address}/${endpoint}`, userObject);\n  }\n  handle_get_requests(userObject, endpoint) {\n    return this.http.get(`${this.address}/${endpoint}/${userObject}`);\n  }\n  healthcheck(endpoint) {\n    return this.http.get(`${this.address}/${endpoint}`);\n  }\n  getMessages() {\n    return this.http.get(`${this.address}/messages`);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","UserService","constructor","http","address","API_BASE_URL","handle_post_requests","userObject","endpoint","post","handle_get_requests","get","healthcheck","getMessages","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/edubskiy/Dev/itmo/ai_assistant/frontend/src/app/services/user.service.ts"],"sourcesContent":["import { HttpClient, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { concat, concatMap, Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private address = environment.API_BASE_URL;\n  constructor(private http: HttpClient) { }\n\n  // private _refreshrequired = new Subject<void>();\n  // get Refreshrequired() {\n  //   return this._refreshrequired;\n  // }\n\n  handle_post_requests(userObject: any, endpoint: string) {\n    return this.http.post<any>(`${this.address}/${endpoint}`, userObject)\n  }\n\n  handle_get_requests(userObject: any, endpoint: string) {\n    return this.http.get<any>(`${this.address}/${endpoint}/${userObject}`)\n  }\n\n  healthcheck(endpoint: string) {\n    return this.http.get<any>(`${this.address}/${endpoint}`)\n  }\n\n  getMessages(): Observable<any> {\n    return this.http.get<any>(`${this.address}/messages`);\n  }\n\n\n\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,YAAY;EACF;EAExC;EACA;EACA;EACA;EAEAC,oBAAoBA,CAACC,UAAe,EAAEC,QAAgB;IACpD,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,IAAII,QAAQ,EAAE,EAAED,UAAU,CAAC;EACvE;EAEAG,mBAAmBA,CAACH,UAAe,EAAEC,QAAgB;IACnD,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAM,GAAG,IAAI,CAACP,OAAO,IAAII,QAAQ,IAAID,UAAU,EAAE,CAAC;EACxE;EAEAK,WAAWA,CAACJ,QAAgB;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAM,GAAG,IAAI,CAACP,OAAO,IAAII,QAAQ,EAAE,CAAC;EAC1D;EAEAK,WAAWA,CAAA;IACT,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAM,GAAG,IAAI,CAACP,OAAO,WAAW,CAAC;EACvD;EAAC,QAAAU,CAAA,G;qBAxBUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}